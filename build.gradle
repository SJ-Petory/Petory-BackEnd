plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    //springdocs -> openAPI3
    id 'com.epages.restdocs-api-spec' version '0.18.4'
    //openAPI3 스펙 기반으로 SwaggerUI 생성
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'com.sj'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //es
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    //restDocs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    //openAPI3
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.4'
// 0.16.4 -> 0.18.4
    //swaggerUI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    //jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    //webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //flyway - 아래 경우 외의 경우
    implementation 'org.flywaydb:flyway-core'
    //flyway - MySQL 8.x 버전이거나 MariaDB를 사용하는 경우
    implementation 'org.flywaydb:flyway-mysql'
}

task copySecret(type: Copy) {
    from 'src/main/resources/config/application-prod.yml'
    into 'src/main/resources'
}

build.dependsOn copySecret
processResources.dependsOn copySecret

tasks.named('test') {
    useJUnitPlatform()
}

openapi3 {
    server = 'http://localhost:8080'
    title = 'Petory API 문서 입니다.'
    description = 'RestDocs API 문서 작성 후 Swagger로 변환'
    version = '0.0.1-SNAPSHOT'
    format = 'json'
    outputFileNamePrefix = 'open-api-3.0.1'
    outputDirectory = 'build/resources/main/static/docs'
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'

    delete file('src/main/resources/static/docs/')
    copy {
        from "build/resources/main/static/docs"
        into "src/main/resources/static/docs/"
    }
}

//task migrageDatabase(type:)
